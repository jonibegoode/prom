imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@ErpBundle/Resources/config/services.yml" }
    - { resource: "@UserBundle/Resources/config/services.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    php_errors:
        log: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

    form_themes:
        - 'bootstrap_3_layout.html.twig'
        - 'VichUploaderBundle:Form:fields.html.twig'

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/../var/data/data.sqlite"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

# Nelmio CORS
nelmio_cors:
    defaults:
        allow_origin:  ["%cors_allow_origin%"]
        allow_methods: ["POST", "PUT", "GET", "DELETE", "OPTIONS"]
        allow_headers: ["content-type", "authorization"]
        max_age:       3600
    paths:
        '^/': ~

# FOS REST Bundle
fos_rest:
    body_listener: true
    param_fetcher_listener: true
    view:
        view_response_listener: 'force'
        formats:
            jsonp: true
            json: true
            xml: false
            rss: false
        mime_types:
            json: ['application/json', 'application/x-json']
            jpg: ['image/jpeg']
            png: ['image/png']
        jsonp_handler: ~
    routing_loader:
        default_format:  json
        include_format:  false
    format_listener:
        rules:
            - { path: ^/api, priorities: [ json, jsonp ], fallback_format: ~, prefer_extension: true }
            - { path: ^/api_t, priorities: [ json, jsonp ], fallback_format: ~, prefer_extension: true }
            - { path: ^/, stop: true }
            - { path: ^/login, stop: true }
    exception:
        enabled: true

# FOS USER Bundle
fos_user:
    db_driver:     orm                       # Le type de BDD à utiliser
    firewall_name: main                      # Le nom du firewall derrière lequel on utilisera ces utilisateurs
    user_class:    UserBundle\Entity\User    # La classe de l'entité User que nous utilisons
    from_email:
            address: you@example.com
            sender_name: You

# Vich Uploader
vich_uploader:
    db_driver: orm
    mappings:
        trialimage_image:
            uri_prefix:         /images
            upload_destination: '%kernel.root_dir%/../web/images'
            directory_namer:    id.directory_namer
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true

        trialarm_arm:
            uri_prefix:         /arm
            upload_destination: '%kernel.root_dir%/../web/arm'
            directory_namer:    id.directory_namer
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true

        trialprotocol_protocol:
            uri_prefix:         /protocol
            upload_destination: '%kernel.root_dir%/../web/protocol'
            directory_namer:    id.directory_namer
            inject_on_load:     false
            delete_on_update:   true
            delete_on_remove:   true





